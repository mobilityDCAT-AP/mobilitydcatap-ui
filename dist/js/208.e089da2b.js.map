{"version":3,"file":"js/208.e089da2b.js","mappings":"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","sources":["webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/index.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/lib/ParserStream.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/index.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/BlankNode.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/DataFactory.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/DefaultGraph.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/Literal.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/NamedNode.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/Quad.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/Variable.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/parser-n3/node_modules/@rdfjs/data-model/lib/fromTerm.js","webpack://mobilitydcatap-ui/./node_modules/@rdfjs/sink/index.js","webpack://mobilitydcatap-ui/./node_modules/readable-to-readable/index.js"],"sourcesContent":["const ParserStream = require('./lib/ParserStream')\nconst Sink = require('@rdfjs/sink')\n\nclass Parser extends Sink {\n  constructor (options) {\n    super(ParserStream, options)\n  }\n}\n\nmodule.exports = Parser\n","const N3 = require('n3')\nconst rdf = require('@rdfjs/data-model')\nconst { finished } = require('readable-stream')\nconst ReadableToReadable = require('readable-to-readable')\n\nclass ParserStream extends ReadableToReadable {\n  constructor (input, { baseIRI = '', factory = rdf } = {}) {\n    const parser = new N3.StreamParser({ baseIRI, factory })\n\n    super(parser, { objectMode: true })\n\n    parser.on('prefix', (prefix, term) => {\n      this.emit('prefix', prefix, term)\n    })\n\n    parser.on('error', err => {\n      this.destroy(err)\n    })\n\n    finished(this, () => {\n      parser.end()\n    })\n\n    input.pipe(parser)\n  }\n}\n\nmodule.exports = ParserStream\n","const DataFactory = require('./lib/DataFactory.js')\n\nmodule.exports = DataFactory\n","class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n","const BlankNode = require('./BlankNode.js')\nconst DefaultGraph = require('./DefaultGraph.js')\nconst fromTermRaw = require('./fromTerm.js')\nconst Literal = require('./Literal.js')\nconst NamedNode = require('./NamedNode.js')\nconst Quad = require('./Quad.js')\nconst Variable = require('./Variable.js')\n\nfunction namedNode (value) {\n  return new NamedNode(value)\n}\n\nfunction blankNode (value) {\n  return new BlankNode(value)\n}\n\nfunction literal (value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype)\n    }\n\n    return new Literal(value, null, DataFactory.namedNode(languageOrDatatype))\n  }\n\n  return new Literal(value, null, languageOrDatatype)\n}\n\nfunction variable (value) {\n  return new Variable(value)\n}\n\nfunction defaultGraph () {\n  return DataFactory.defaultGraphInstance\n}\n\nfunction triple (subject, predicate, object) {\n  return DataFactory.quad(subject, predicate, object)\n}\n\nfunction quad (subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph || DataFactory.defaultGraphInstance)\n}\n\nfunction fromTerm (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nfunction fromQuad (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  literal,\n  variable,\n  defaultGraph,\n  triple,\n  quad,\n  fromTerm,\n  fromQuad,\n  defaultGraphInstance: new DefaultGraph()\n}\n\nmodule.exports = DataFactory\n","class DefaultGraph {\n  equals (other) {\n    return !!other && other.termType === this.termType\n  }\n}\n\nDefaultGraph.prototype.termType = 'DefaultGraph'\nDefaultGraph.prototype.value = ''\n\nmodule.exports = DefaultGraph\n","const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n","class NamedNode {\n  constructor (iri) {\n    this.value = iri\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nNamedNode.prototype.termType = 'NamedNode'\n\nmodule.exports = NamedNode\n","const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n","class Variable {\n  constructor (name) {\n    this.value = name\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nVariable.prototype.termType = 'Variable'\n\nmodule.exports = Variable\n","function fromTerm (original) {\n  if (!original) {\n    return null\n  }\n\n  if (original.termType === 'BlankNode') {\n    return this.blankNode(original.value)\n  }\n\n  if (original.termType === 'DefaultGraph') {\n    return this.defaultGraph()\n  }\n\n  if (original.termType === 'Literal') {\n    return this.literal(original.value, original.language || this.namedNode(original.datatype.value))\n  }\n\n  if (original.termType === 'NamedNode') {\n    return this.namedNode(original.value)\n  }\n\n  if (original.termType === 'Quad') {\n    const subject = this.fromTerm(original.subject)\n    const predicate = this.fromTerm(original.predicate)\n    const object = this.fromTerm(original.object)\n    const graph = this.fromTerm(original.graph)\n\n    return this.quad(subject, predicate, object, graph)\n  }\n\n  if (original.termType === 'Variable') {\n    return this.variable(original.value)\n  }\n\n  throw new Error(`unknown termType ${original.termType}`)\n}\n\nmodule.exports = fromTerm\n","class Sink {\n  constructor (Impl, options) {\n    this.Impl = Impl\n    this.options = options\n  }\n\n  import (input, options) {\n    const output = new this.Impl(input, Object.assign({}, this.options, options))\n\n    input.on('end', () => {\n      if (!output.readable) {\n        output.emit('end')\n      }\n    })\n\n    input.on('error', (err) => {\n      output.emit('error', err)\n    })\n\n    return output\n  }\n}\n\nmodule.exports = Sink\n","const { finished, Readable } = require('readable-stream')\n\nfunction nextLoop () {\n  return new Promise(resolve => setTimeout(resolve, 0))\n}\n\nclass ReadableToReadable extends Readable {\n  constructor (input, { end = true, map, ...args } = {}) {\n    super({\n      read: ReadableToReadable.readFrom(input, { end, map }),\n      ...args\n    })\n  }\n\n  static readFrom (input, { end = true, map = v => v } = {}) {\n    let done = false\n\n    finished(input, () => {\n      done = true\n    })\n\n    const read = async function () {\n      while (true) {\n        const chunk = input.read()\n\n        if (!chunk) {\n          if (done && end) {\n            this.push(null)\n          }\n\n          if (done) {\n            return true\n          }\n\n          await nextLoop()\n        } else {\n          if (!this.push(map(chunk))) {\n            return false\n          }\n        }\n      }\n    }\n\n    return read\n  }\n}\n\nmodule.exports = ReadableToReadable\n"],"names":["ParserStream","Sink","Parser","constructor","options","super","module","exports","N3","rdf","finished","ReadableToReadable","input","baseIRI","factory","parser","StreamParser","objectMode","on","prefix","term","this","emit","err","destroy","end","pipe","DataFactory","BlankNode","id","value","nextId","equals","other","termType","prototype","DefaultGraph","fromTermRaw","Literal","NamedNode","Quad","Variable","namedNode","blankNode","literal","languageOrDatatype","indexOf","variable","defaultGraph","defaultGraphInstance","triple","subject","predicate","object","quad","graph","fromTerm","original","call","fromQuad","language","datatype","stringDatatype","langStringDatatype","iri","name","Error","Impl","import","output","Object","assign","readable","Readable","nextLoop","Promise","resolve","setTimeout","map","args","read","readFrom","v","done","async","chunk","push"],"sourceRoot":""}